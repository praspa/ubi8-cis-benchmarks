{
	"benchmark": {
		"type": "cis",
		"upstream_source": "CIS_Red_Hat_Enterprise_Linux_8_Benchmark_v1.0.1.pdf",
		"controls": [
			{
				"id": "1.1.1.1",
				"level": "1",
				"description": "Ensure mounting of cramfs filesystems is disabled (Scored)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v cramfs",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep cramfs",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "touch /etc/modprobe.d/cramfs.conf",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "echo 'install cramfs /bin/true' > /etc/modprobe.d/cramfs.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which rmod",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "rmod cramfs",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.1.1.2",
				"level": "2",
				"description": "Ensure mounting of vFAT filesystems is limited (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/fstab",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -i ' vfat ' /etc/fstab",
						"result": "0",
						"result_type": "rc",
						"comment": "Applicable when using UEFI."
					},
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v vfat",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep vfat",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "touch /etc/modprobe.d/vfat.conf",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "echo 'install vfat /bin/true' > /etc/modprobe.d/vfat.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which rmod",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "rmod vfat",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.1.1.3",
				"level": "1",
				"description": "Ensure mounting of squashfs filesystems is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v squashfs",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep squashfs",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "touch /etc/modprobe.d/squashfs.conf",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "echo 'install squashfs /bin/true' > /etc/modprobe.d/squashfs.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which rmod",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "rmod squashfs",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.1.1.4",
				"level": "1",
				"description": "Ensure mounting of udf filesystems is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v udf",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep udf",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "touch /etc/modprobe.d/udf.conf",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "echo 'install udf /bin/true' > /etc/modprobe.d/udf.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which rmod",
								"result": "0",
								"result_type": "rc"
							}
						],
						"cmd": "rmod udf",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.1.2",
				"level": "1",
				"description": "Ensure /tmp is configured (Automated)",
				"comment": "If an entry for /tmp exists in /etc/fstab it will take precedence over entries in the tmp.mount file. BUG 1667065* There is currently a bug in RHEL 8 when attempting to use systemd tmp.mount please reference link bellow",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep -E ' /tmp '",
						"result": "0",
						"result_type": "rc",
						"comment": "Example output: tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noexec,relatime)"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/fstab",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E ' /tmp ' /etc/fstab",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "systemctl is-enabled tmp.mount",
								"result_type": "stdout",
								"result": "enabled"
							}
						],
						"cmd": "systemctl is-enabled tmp.mount",
						"result": "stdout",
						"result_type": "enabled"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.3",
				"level": "1",
				"description": "Ensure nodev option set on /tmp partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep -E ' /tmp ' | grep 'nodev'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.4",
				"level": "1",
				"description": "Ensure nosuid option set on /tmp partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep -E ' /tmp ' | grep 'nosuid'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.5",
				"level": "1",
				"description": "Ensure noexec option set on /tmp partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep -E ' /tmp ' | grep 'noexec'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.6",
				"level": "2",
				"description": "Ensure separate partition exists for /var (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep ' /var '",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.7",
				"level": "1",
				"description": "Ensure separate partition exists for /var/tmp (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep '/var/tmp'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.8",
				"level": "1",
				"description": "Ensure nodev option set on /var/tmp partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep ' /var/tmp ' | grep 'nodev'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.9",
				"level": "1",
				"description": "Ensure nosuid option set on /var/tmp partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep -E ' /var/tmp ' | grep 'nosuid'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.10",
				"level": "1",
				"description": "Ensure noexec option set on /var/tmp partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep ' /var/tmp ' | grep 'noexec'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.11",
				"level": "2",
				"description": "Ensure separate partition exists for /var/log (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep '/var/log'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.12",
				"level": "2",
				"description": "Ensure separate partition exists for /var/log/audit (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep '/var/log/audit'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.13",
				"level": "2",
				"description": "Ensure separate partition exists for /home (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep '/home'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.14",
				"level": "1",
				"description": "Ensure nodev option set on /home partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep '/home' | grep 'nodev'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.15",
				"level": "1",
				"description": "Ensure nodev option set on /dev/shm partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep ' /dev/shm ' | grep 'nodev'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.16",
				"level": "1",
				"description": "Ensure nosuid option set on /dev/shm partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep ' /dev/shm ' | grep 'nosuid'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.17",
				"level": "1",
				"description": "Ensure noexec option set on /dev/shm partition (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "mount | grep ' /dev/shm ' | grep 'noexec'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.18",
				"level": "1",
				"description": "Ensure nodev option set on removable media partitions (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "/bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.19",
				"level": "1",
				"description": "Ensure nosuid option set on removable media partitions (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "/bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.20",
				"level": "1",
				"description": "Ensure noexec option set on removable media partitions (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which mount",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "/bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.1.21",
				"level": "1",
				"description": "Ensure sticky bit is set on all world-writable directories (Automated)",
				"audits": [
					{
						"applicable_checks": [],
						"cmd": "df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) 2>/dev/null",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [],
						"cmd": "df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) 2>/dev/null | xargs -I '{}' chmod a+t '{}'",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.1.22",
				"level": "1",
				"description": "Disable Automounting (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "systemctl cat autofs.service",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled autofs",
						"result": "disabled",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Ensure we are running systemd. Might be in a container."
							}
						],
						"cmd": "systemctl --now disable autofs",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.1.23",
				"level": "1",
				"description": "Disable USB Storage (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v usb-storage",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep usb-storage",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "touch /etc/modprobe.d/usb_storage.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "echo 'install usb-storage /bin/true' > /etc/modprobe.d/usb_storage.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which rmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rmod usb-storage",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.2.1",
				"level": "1",
				"description": "Ensure Red Hat Subscription Manager connection is configured (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which subscription-manager",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "subscription-manager identity",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.2.2",
				"level": "1",
				"description": "Disable the rhnsd Daemon (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "systemctl cat rhnsd.service",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled rhnsd",
						"result": "disabled",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Ensure we are running systemd. Might be in a container."
							}
						],
						"cmd": "systemctl --now disable rhnsd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.2.3",
				"level": "1",
				"description": "Ensure GPG keys are configured (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.2.4",
				"level": "1",
				"description": "Ensure gpgcheck is globally activated (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/yum.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep ^gpgcheck /etc/yum.conf",
						"result": "gpgcheck=1",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/yum.repos.d/",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E 'gpgcheck\\s*=\\s*0' /etc/yum.repos.d/*",
						"result": "1",
						"result_type": "rc",
						"comment": "Verify no gpgchecks disabled in any repos conf file."
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/yum.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sed -i 's/gpgcheck=.*/gpgcheck=1/g' /etc/yum.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/yum.repos.d/",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sed -i 's/gpgcheck=.*/gpgcheck=1/g' /etc/yum.repos.d/*.repo",
						"result": "0",
						"result_type": "rc",
						"comment": "Unconditionally set all to enabled."
					}
				]
			},
			{
				"id": "1.2.5",
				"level": "1",
				"description": "Ensure package manager repositories are configured (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf repolist",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.3.1",
				"level": "1",
				"description": "Ensure sudo is installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "rpm -q sudo",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "dnf -y install sudo",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.3.2",
				"level": "1",
				"description": "Ensure sudo commands use pty (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "grep -Ei '^\\s*Defaults\\s+(\\[^#]+,\\s*)?use_pty' /etc/sudoers",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							},
							{
								"cmd": "ls -1q /etc/sudoers.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0",
								"comment": "nonzero files in directory."
							}
						],
						"cmd": "grep -Eiv '^\\s*Defaults\\s+(\\[^#]+,\\s*)?use_pty' /etc/sudoers.d/*",
						"result": "!0",
						"result_type": "rc",
						"comment": "Inverted grep. A file in /etc/sudoers.d/ does not contain the logfile definition."
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "echo 'Defaults use_pty' >> /etc/sudoers",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sudoers.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0",
								"comment": "nonzero files in directory."
							},
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "echo 'Defaults use_pty' | tee /etc/sudoers/*.conf",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.3.3",
				"level": "1",
				"description": "Ensure sudo log file exists (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "grep -Esi '^\\s*Defaults\\s+([^#]+,\\s*)?logfile=' /etc/sudoers",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							},
							{
								"cmd": "ls -1q /etc/sudoers.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0",
								"comment": "nonzero files in directory."
							}
						],
						"cmd": "grep -Esiv '^\\s*Defaults\\s+([^#]+,\\s*)?logfile=' /etc/sudoers /etc/sudoers.d/*",
						"result": "!0",
						"result_type": "rc",
						"comment": "Inverted grep. A file in /etc/sudoers.d/ does not contain the logfile definition."
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "echo 'Defaults use_pty' >> /etc/sudoers",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sudoers.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0",
								"comment": "nonzero files in directory."
							},
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "echo 'Defaults logfile=\"/var/log/sudo.log\"' | tee /etc/sudoers/*.conf",
						"result": "0",
						"result_type": "rc",
						"comment": "Update log file path based on site requirements and procedures."
					}
				]
			},
			{
				"id": "1.4.1",
				"level": "1",
				"description": "Ensure AIDE is installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "rpm -q aide",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "dnf -y install sudo",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "aide --init",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.4.2",
				"level": "1",
				"description": "Ensure filesystem integrity is regularly checked (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "grep -Ers '^([^#]+\\s+)?(\/usr\/s?bin\/|^\\s*)aide(\\.wrapper)?\\s(--?\\S+\\s)*(--(check|update)|\\$AIDEARGS)\b' /etc/cron.* /etc/crontab /var/spool/cron/",
						"result": "0",
						"result_type": "rc",
						"comment": "Ensure that a job exists somewhere."
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "systemctl is-enabled aidecheck.service",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "systemctl is-enabled aidecheck.timer",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": " systemctl status aidecheck.timer",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.5.1",
				"level": "1",
				"description": "Ensure permissions on bootloader config are configured",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "bash scripts/1_5_1_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "bash scripts/1_5_1_remediate.sh",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.5.2",
				"level": "1",
				"description": "Ensure bootloader password is set (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "bash scripts/1_5_2_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "1.5.3",
				"level": "1",
				"description": "Ensure authentication required for single user mode (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "grep /systemd-sulogin-shell /usr/lib/systemd/system/rescue.service",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							}
						],
						"cmd": "grep /systemd-sulogin-shell /usr/lib/systemd/system/emergency.service",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							},
							{
								"cmd": "grep /systemd-sulogin-shell /usr/lib/systemd/system/rescue.service",
								"result_type": "rc",
								"result": "!0",
								"comment": "Check current setting"
							}
						],
						"cmd": "sed -i \"s/ExecStart=.*/ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue/\" /usr/lib/systemd/system/rescue.service",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -al /proc/1/exe | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Check if we are in a container."
							},
							{
								"cmd": "grep /systemd-sulogin-shell /usr/lib/systemd/system/emergency.service",
								"result_type": "rc",
								"result": "!0",
								"comment": "Check current setting"
							}
						],
						"cmd": "sed -i \"s/ExecStart=.*/ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency/\" /usr/lib/systemd/system/emergency.service",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.6.1",
				"level": "1",
				"description": "Ensure core dumps are restricted (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /proc/sys/fs/suid_dumpable",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /proc/sys/fs/suid_dumpable",
						"result": "0",
						"result_type": "stdout",
						"comment": "Ensure its defined in at least one file."
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -E \"^\\s*\\*\\s+hard\\s+core\\s+0\" /etc/security/limits.conf /etc/security/limits.d/*",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "echo '* hard core 0' >> /etc/security/limits.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep \"fs\\.suid_dumpable = 0\" /etc/sysctl.conf /etc/sysctl.d/*",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "echo 'fs.suid_dumpable = 0' >> /etc/sysctl.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl -w fs.suid_dumpable=0",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/systemd/coredump.conf",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "echo 'Storage=none' >> /etc/systemd/coredump.conf && echo 'ProcessSizeMax=0' >> /etc/systemd/coredump.conf && systemctl daemon-reload",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.6.2",
				"level": "1",
				"description": "Ensure address space layout randomization (ASLR) is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /proc/sys/kernel/randomize_va_space",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /proc/sys/kernel/randomize_va_space",
						"result": "2",
						"result_type": "stdout"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep \"kernel\\.randomize_va_space = 2\" /etc/sysctl.conf /etc/sysctl.d/*",
								"result_type": "rc",
								"result": "!0"
							},
							{
								"cmd": "test -w /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "echo 'kernel.randomize_va_space = 2' >> /etc/sysctl.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl -w kernel.randomize_va_space=2",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.7.1.1",
				"level": "2",
				"description": "Ensure SELinux is installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q libselinux",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "rpm -q libselinux",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "dnf -y install libselinux",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.7.1.2",
				"level": "2",
				"description": "1.7.1.2 Ensure SELinux is not disabled in bootloader configuration (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							},
							{
								"cmd": "test -r /boot/grub2/grubenv",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E 'kernelopts=(\\S+\\s+)*(selinux=0|enforcing=0)+\b'",
						"result": "!0",
						"result_type": "rc",
						"comment": "Nothing should be returned."
					}
				],
				"remediations": []
			},
			{
				"id": "1.7.1.3",
				"level": "2",
				"description": "Ensure SELinux policy is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							},
							{
								"cmd": "test -r /etc/selinux/config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E '^\\s*SELINUXTYPE=(targeted|mls)\\b' /etc/selinux/config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							},
							{
								"cmd": "which sestatus",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sestatus | grep Loaded",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/selinux/config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sed -i \"s/SELINUXTYPE=.*/SELINUXTYPE=targeted/\" /etc/selinux/config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.7.1.4",
				"level": "2",
				"description": "Ensure the SELinux state is enforcing (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							},
							{
								"cmd": "test -r /etc/selinux/config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E '^\\s*SELINUX=enforcing' /etc/selinux/config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							},
							{
								"cmd": "which sestatus",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sestatus | grep 'Current mode: enforcing'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/selinux/config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sed -i \"s/SELINUX=.*/SELINUX=enforcing/\" /etc/selinux/config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.7.1.5",
				"level": "2",
				"description": "Ensure no unconfined services exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which ps",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "ps -eZ | grep 'unconfined_service_t'",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "!0",
								"comment": "We are in a container. UBI8 missing ps?"
							},
							{
								"cmd": "which ps",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "ls -alZ /proc/*/ | grep 'exe' | grep 'unconfined_service_t'",
						"result": "!0",
						"result_type": "rc",
						"comment": "Intent is to run this audit check where ps is not available."
					}
				],
				"remediations": []
			},
			{
				"id": "1.7.1.6",
				"level": "2",
				"description": "Ensure SETroubleshoot is not installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q setroubleshoot",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf -y remove setroubleshoot",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.7.1.7",
				"level": "2",
				"description": "Ensure the MCS Translation Service (mcstrans) is not installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q mcstrans",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf -y remove mcstrans",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.8.1.1",
				"level": "1",
				"description": "Ensure message of the day is configured properly (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/motd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "diff /etc/motd ./conf/etc/motd",
						"result": "0",
						"result_type": "rc",
						"comment": "Ensure motd matches what we expect."
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "stat ./conf/etc/motd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat ./conf/etc/motd > /etc/motd",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat ./conf/etc/motd",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "rm -f /etc/motd",
						"result": "0",
						"result_type": "rc",
						"comment": "If no site specific motd defined remove it from target."
					}
				]
			},
			{
				"id": "1.8.1.2",
				"level": "1",
				"description": " Ensure local login warning banner is configured properly (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "diff /etc/issue ./conf/etc/issue",
						"result": "0",
						"result_type": "rc",
						"comment": "Ensure issue matches what we expect."
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r ./conf/etc/issue",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat ./conf/etc/issue > /etc/issue",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.8.1.3",
				"level": "1",
				"description": "Ensure remote login warning banner is configured properly (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue.net",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "diff /etc/issue.net ./conf/etc/issue.net",
						"result": "0",
						"result_type": "rc",
						"comment": "Ensure issue matches what we expect."
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r ./conf/etc/issue.net",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat ./conf/etc/issue.net > /etc/issue.net",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.8.1.4",
				"level": "1",
				"description": "Ensure permissions on /etc/motd are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/motd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/motd | grep 644",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/motd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/motd | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/motd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/motd && chmod 644 /etc/motd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.8.1.5",
				"level": "1",
				"description": "Ensure permissions on /etc/issue are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/issue | grep 644",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/issue | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/issue && chmod 644 /etc/issue",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.8.1.6",
				"level": "1",
				"description": "Ensure permissions on /etc/issue.net are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue.net",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/issue.net | grep 644",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue.net",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/issue.net | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/issue.net",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/issue.net && chmod 644 /etc/issue.net",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.8.2",
				"level": "1",
				"description": "Ensure GDM login banner is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "systemctl status display-manager",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "diff ./conf/greeter.dconf-defaults /etc/gdm/greeter.dconf-defaults",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "systemctl status display-manager",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "stat ./conf/greeter.dconf-defaults",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat ./conf/greeter.dconf-defautls > /etc/gdm/greeter.dconf-defaults",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.9",
				"level": "1",
				"description": "Ensure updates, patches, and additional security software are installed (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Do not want to dnf update on a container as container is designed to perform and be supported under specific set of packages."
							},
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf check-update",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /bin/true",
						"comment": "TODO: update cmd to 'dnf update', too cowardly to do it now else might accidentally perform this on a host.",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.10",
				"level": "1",
				"description": "Ensure system-wide crypto policy is not legacy",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/crypto-policies/config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -i '^\\s*LEGACY\\s*(\\s+#.*)?$' /etc/crypto-policies/config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/crypto-policies/config",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "grep -E -i '^\\s*LEGACY\\s*(\\s+#.*)?$' /etc/crypto-policies/config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "update-crypto-policies --set DEFAULT && update-crypto-policies",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "1.11",
				"level": "2",
				"description": "Ensure system-wide crypto policy is FUTURE or FIPS (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/crypto-policies/config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -i '^\\s*(FUTURE|FIPS)\\s*(\\s+#.*)?$' /etc/crypto-policies/config",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/crypto-policies/config",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "grep -E -i '^\\s*(FUTURE|FIPS)\\s*(\\s+#.*)?$' /etc/crypto-policies/config",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "update-crypto-policies --set FUTURE",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.1.1",
				"level": "1",
				"description": "Ensure xinetd is not installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q xinetd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf -y remove xinetd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.1.1",
				"level": "1",
				"description": "Ensure time synchronization is in use (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q chrony",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf install chrony",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.1.2",
				"level": "1",
				"description": "Ensure chrony is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/chrony.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E \"^(server|pool)\" /etc/chrony.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which ps",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "ps -ef | grep chronyd",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "2.2.2",
				"level": "1",
				"description": "Ensure X Window System is not installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -qa | grep xorg-x11-server",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf -y remove xorg-x11-server-*",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.3",
				"level": "1",
				"description": "Ensure rsync service is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled rsyncd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable rsyncd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.4",
				"level": "1",
				"description": "Ensure Avahi Server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled avahi-daemon.socket",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable avahi-daemon.socket && systemctl --now disable avahi-daemon.service ",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.5",
				"level": "1",
				"description": "Ensure SNMP Server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled snmpd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable snmpd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.6",
				"level": "1",
				"description": "Ensure HTTP Proxy Server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled squid",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable squid",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.7",
				"level": "1",
				"description": "Ensure Samba is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled smb",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable smb",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.8",
				"level": "1",
				"description": "Ensure IMAP and POP3 server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled dovecot",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable dovecot",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.9",
				"level": "1",
				"description": "Ensure HTTP server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled httpd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable httpd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.10",
				"level": "1",
				"description": "Ensure FTP Server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled vsftpd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable vsftpd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.11",
				"level": "1",
				"description": "Ensure DNS Server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled named",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable named",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.12",
				"level": "1",
				"description": "Ensure NFS is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled nfs-server",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable nfs-server",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.13",
				"level": "1",
				"description": "Ensure RPC is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled rpcbind",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable rpcbind",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.14",
				"level": "1",
				"description": "Ensure LDAP server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled slapd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable slapd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.15",
				"level": "1",
				"description": "Ensure DHCP Server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled dhcpd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable dhcpd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.16",
				"level": "1",
				"description": "Ensure CUPS is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled cups",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable cups",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.17",
				"level": "1",
				"description": "Ensure NIS Server is not enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled ypserv",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now disable ypserv",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.2.18",
				"level": "1",
				"description": "Ensure mail transfer agent is configured for local-only mode (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which ss",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "ss -lntu | grep -E ':25\\s' | grep -E -v '\\s(127.0.0.1|::1):25\\s'",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "2.3.1",
				"level": "1",
				"description": "Ensure NIS Client is not installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q ypbind",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf -y remove ypbind",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.3.2",
				"level": "1",
				"description": "Ensure telnet client is not installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q telnet",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf -y remove telnet",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "2.3.3",
				"level": "1",
				"description": "Ensure LDAP client is not installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q openldap-clients",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf -y remove openldap-clients",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "3.1.1",
				"level": "1",
				"description": "Ensure IP forwarding is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.ip_forward | grep 'net.ipv4.ip_forward = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /etc/sysctl.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /etc/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /usr/lib/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /run/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv6.conf.all.forwarding | grep 'net.ipv6.conf.all.forwarding = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /etc/sysctl.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /etc/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /usr/lib/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /run/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.1.2",
				"level": "1",
				"description": "Ensure packet redirect sending is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.all.send_redirects | grep 'net.ipv4.conf.all.send_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.default.send_redirects | grep 'net.ipv4.conf.default.send_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.send_redirects\" /etc/sysctl.conf |  grep 'net.ipv4.conf.all.send_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.send_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.all.send_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.default\\.send_redirects\" /etc/sysctl.conf | grep 'net.ipv4.conf.default.send_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.default\\.send_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.default.send_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.1",
				"level": "1",
				"description": "Ensure source routed packets are not accepted (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /proc/sys/net/ipv4/conf/all/accept_source_route",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /proc/sys/net/ipv4/conf/all/accept_source_route",
						"result": "0",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /proc/sys/net/ipv6/conf/all/accept_source_route",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /proc/sys/net/ipv6/conf/all/accept_source_route",
						"result": "0",
						"result_type": "stdout"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.2",
				"level": "1",
				"description": "Ensure ICMP redirects are not accepted (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.all.accept_redirects | grep 'net.ipv4.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.default.accept_redirects | grep 'net.ipv4.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.accept_redirects\" /etc/sysctl.conf | grep 'net.ipv4.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.accept_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.accept_redirects\" /usr/lib/sysctl.d/*.conf | grep 'net.ipv4.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.accept_redirects\" /run/sysctl.d/*.conf | grep 'net.ipv4.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.default\\.accept_redirects\" /etc/sysctl.conf | grep 'net.ipv4.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep  \"net\\.ipv4\\.conf\\.default\\.accept_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep  \"net\\.ipv4\\.conf\\.default\\.accept_redirects\" /usr/lib/sysctl.d/*.conf | grep 'net.ipv4.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep  \"net\\.ipv4\\.conf\\.default\\.accept_redirects\" /run/sysctl.d/*.conf | grep 'net.ipv4.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},					
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv6.conf.all.accept_redirects | grep 'net.ipv6.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv6.conf.default.accept_redirects | grep 'net.ipv6.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep  \"net\\.ipv6\\.conf\\.all\\.accept_redirects\" /etc/sysctl.conf | grep 'net.ipv6.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.all\\.accept_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv6.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.all\\.accept_redirects\" /usr/lib/sysctl.d/*.conf | grep 'net.ipv6.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.all\\.accept_redirects\" /run/sysctl.d/*.conf | grep 'net.ipv6.conf.all.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep  \"net\\.ipv6\\.conf\\.default\\.accept_redirects\" /etc/sysctl.conf | grep 'net.ipv6.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.default\\.accept_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv6.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.default\\.accept_redirects\" /usr/lib/sysctl.d/*.conf | grep 'net.ipv6.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.default\\.accept_redirects\" /run/sysctl.d/*.conf | grep 'net.ipv6.conf.default.accept_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.3",
				"level": "1",
				"description": "Ensure secure ICMP redirects are not accepted (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.all.secure_redirects | grep 'net.ipv4.conf.all.secure_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.default.secure_redirects | grep 'net.ipv4.conf.default.secure_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.secure_redirects\" /etc/sysctl.conf | grep 'net.ipv4.conf.all.secure_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.secure_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.all.secure_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.default\\.secure_redirects\" /etc/sysctl.conf | grep 'net.ipv4.conf.default.secure_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep  \"net\\.ipv4\\.conf\\.default\\.secure_redirects\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.default.secure_redirects = 0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.4",
				"level": "1",
				"description": "Ensure suspicious packets are logged (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.all.log_martians | grep 'net.ipv4.conf.all.log_martians = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.conf.default.log_martians | grep 'net.ipv4.conf.default.log_martians = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.log_martians\" /etc/sysctl.conf | grep 'net.ipv4.conf.all.log_martians = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.all\\.log_martians\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.all.log_martians = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv4\\.conf\\.default\\.log_martians\" /etc/sysctl.conf | grep 'net.ipv4.conf.default.log_martians = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep  \"net\\.ipv4\\.conf\\.default\\.log_martians\" /etc/sysctl.d/*.conf | grep 'net.ipv4.conf.default.log_martians = 1'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.5",
				"level": "1",
				"description": "Ensure broadcast ICMP requests are ignored (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.icmp_echo_ignore_broadcasts | grep 'net.ipv4.icmp_echo_ignore_broadcasts = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*=\\s*0\" /etc/sysctl.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*=\\s*0\" /etc/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*=\\s*0\" /usr/lib/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*=\\s*0\" /run/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.6",
				"level": "1",
				"description": "Ensure bogus ICMP responses are ignored (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.icmp_ignore_bogus_error_responses | grep 'net.ipv4.icmp_ignore_bogus_error_responses = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*=\\s*0\" /etc/sysctl.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*=\\s*0\" /etc/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*=\\s*0\" /usr/lib/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -s \"^\\s*net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*=\\s*0\" /run/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.7",
				"level": "1",
				"description": "Ensure Reverse Path Filtering is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /proc/sys/net/ipv4/conf/all/rp_filter",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /proc/sys/net/ipv4/conf/all/rp_filter",
						"result": "1",
						"result_type": "stdout"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.8",
				"level": "1",
				"description": "Ensure TCP SYN Cookies is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv4.tcp_syncookies | grep 'net.ipv4.tcp_syncookies = 1'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E -r \"^\\s*net\\.ipv4\\.tcp_syncookies\\s*=\\s*[02]\" /etc/sysctl.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -r \"^\\s*net\\.ipv4\\.tcp_syncookies\\s*=\\s*[02]\" /etc/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /usr/lib/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -r \"^\\s*net\\.ipv4\\.tcp_syncookies\\s*=\\s*[02]\" /usr/lib/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /run/sysctl.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep -E -r \"^\\s*net\\.ipv4\\.tcp_syncookies\\s*=\\s*[02]\" /run/sysctl.d/*.conf",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.2.9",
				"level": "1",
				"description": "Ensure IPv6 router advertisements are not accepted (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv6.conf.all.accept_ra | grep 'net.ipv6.conf.all.accept_ra = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sysctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sysctl net.ipv6.conf.default.accept_ra | grep 'net.ipv6.conf.default.accept_ra = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.all\\.accept_ra\" /etc/sysctl.conf | grep 'net.ipv6.conf.all.accept_ra = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.all\\.accept_ra\" /etc/sysctl.d/*.conf | grep 'net.ipv6.conf.all.accept_ra = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/sysctl.conf",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.default\\.accept_ra\" /etc/sysctl.conf | grep 'net.ipv6.conf.default.accept_ra = 0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -1q /etc/sysctl.d/ 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"net\\.ipv6\\.conf\\.default\\.accept_ra\" /etc/sysctl.d/*.conf | grep 'net.ipv6.conf.default.accept_ra = 0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": []
			},
			{
				"id": "3.3.1",
				"level": "2",
				"description": "Ensure DCCP is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v dccp",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep dccp",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.3.2",
				"level": "2",
				"description": "Ensure SCTP is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v sctp",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep sctp",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.3.3",
				"level": "2",
				"description": "Ensure RDS is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v rds",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep rds",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.3.4",
				"level": "2",
				"description": "Ensure TIPC is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which modprobe",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "modprobe -n -v tipc",
						"result": "install /bin/true",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which lsmod",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "lsmod | grep tipc",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.1.1",
				"level": "1",
				"description": "Ensure a Firewall package is installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/3_4_1_1_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.2.1",
				"level": "1",
				"description": "Ensure firewalld service is enabled and running (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled firewalld",
						"result": "enabled",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which firewall-cmd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "firewall-cmd --state",
						"result": "running",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.2.2",
				"level": "1",
				"description": "Ensure iptables service is not enabled with firewalld",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl status iptables",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled iptables",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.2.3",
				"level": "1",
				"description": "Ensure nftables is not enabled with firewalld (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl status nftables",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled nftables",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.2.4",
				"level": "1",
				"description": "Ensure firewalld default zone is set (Automated)",
				"comment": "Set default zone to company policy. # firewall-cmd --get-default-zone",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.2.5",
				"level": "1",
				"description": "Ensure network interfaces are assigned to appropriate zone (Manual)",
				"comment": "nmcli -t connection show | awk -F: '{if($4){print $4}}' | while read INT; do firewall-cmd --get-active-zones | grep -B1 $INT; done",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.2.6",
				"level": "1",
				"description": "Ensure firewalld drops unnecessary services and ports (Manual)",
				"comment": "firewall-cmd --get-active-zones | awk '!/:/ {print $1}' | while read ZN; do firewall-cmd --list-all --zone=$ZN; done",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.3.1",
				"level": "1",
				"description": "Ensure iptables are flushed with nftables (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "nft list tables",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "iptables -L",
						"result": "",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "nft list tables",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which ip6tables",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "ip6tables -L",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.3.2",
				"level": "1",
				"description": "Ensure an nftables table exists (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list tables",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.3.3",
				"level": "1",
				"description": "Ensure nftables base chains exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | grep 'hook input' | grep 'type filter hook input priority 0;'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | grep 'hook forward' | grep 'type filter hook forward priority 0;'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | grep 'hook output' | grep 'type filter hook output priority 0;'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.3.4",
				"level": "1",
				"description": "Ensure nftables loopback traffic is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | awk '/hook input/,/}/' | grep 'iif \"lo\" accept'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr' | grep 'ip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr' | grep 'ip6 saddr ::1 counter packets 0 bytes 0 drop'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.3.5",
				"level": "1",
				"description": "Ensure nftables outbound and established connections are configured (Manual)",
				"comment": "TODO",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.3.6",
				"level": "1",
				"description": "Ensure nftables default deny firewall policy (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | grep 'hook input' | grep 'type filter hook input priority 0; policy drop;'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | grep 'hook forward' | grep 'type filter hook forward priority 0; policy drop;'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which nft",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "nft list ruleset | grep 'hook output' | grep 'type filter hook output priority 0; policy drop;'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.3.7",
				"level": "1",
				"description": "Ensure nftables service is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled nftables",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "systemctl is-enabled nftables",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "systemctl --now enable nftables",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "3.4.3.8",
				"level": "1",
				"description": "Ensure nftables rules are permanent (Automated)",
				"comment": "TODO",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.1.1",
				"level": "1",
				"description": "Ensure iptables default deny firewall policy (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which iptables",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "iptables -L | grep 'Chain INPUT (policy REJECT\\|DROP)'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which iptables",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "iptables -L | grep 'Chain FORWARD (policy REJECT\\|DROP)'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which iptables",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "iptables -L | grep 'Chain OUTPUT (policy REJECT\\|DROP)'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.1.2",
				"level": "1",
				"description": "Ensure iptables loopback traffic is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which iptables",
								"result_type": "rc",
								"result": "0"
							}			
						],
						"cmd": "iptables -L INPUT -v -n | grep 'ACCEPT     all  --  lo     \\*       0.0.0.0/0            0.0.0.0/0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which iptables",
								"result_type": "rc",
								"result": "0"
							}			
						],
						"cmd": "iptables -L INPUT -v -n | grep 'DROP       all  --  \\*      \\*       127.0.0.0/8          0.0.0.0/0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which iptables",
								"result_type": "rc",
								"result": "0"
							}			
						],
						"cmd": "iptables -L OUTPUT -v -n | grep 'ACCEPT     all  --  \\*      lo      0.0.0.0/0            0.0.0.0/0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.1.3",
				"level": "1",
				"description": "Ensure iptables outbound and established connections are configured (Manual)",
				"comment": "TODO",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.1.4",
				"level": "1",
				"description": " Ensure iptables firewall rules exist for all open ports (Automated)",
				"comment": "TODO, compare listeners against accept rules",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.1.5",
				"level": "1",
				"description": "Ensure iptables is enabled and active (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled iptables",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "systemctl is-enabled iptables",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "systemctl --now enable iptables",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "3.4.4.2.1",
				"level": "1",
				"description": "Ensure ip6tables default deny firewall policy (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which ip6tables",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "ip6tables -L | grep 'Chain INPUT (policy REJECT\\|DROP)'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which ip6tables",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "ip6tables -L | grep 'Chain FORWARD (policy REJECT\\|DROP)'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which ip6tables",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "ip6tables -L | grep 'Chain OUTPUT (policy REJECT\\|DROP)'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.2.2",
				"level": "1",
				"description": "Ensure ip6tables loopback traffic is configured (Automated)",
				"comment": "TODO fix spacing",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which ip6tables",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}			
						],
						"cmd": "ip6tables -L INPUT -v -n | grep 'ACCEPT     all    lo     \\*       ::0/0                ::/0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which ip6tables",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}			
						],
						"cmd": "ip6tables -L INPUT -v -n | grep 'DROP       all    \\*      \\*      ::1          ::/0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which ip6tables",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}			
						],
						"cmd": "ip6tables -L OUTPUT -v -n | grep 'ACCEPT     all    \\*      lo      ::/0            ::/0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.2.3",
				"level": "1",
				"description": "Ensure ip6tables outbound and established connections are configured (Manual)",
				"comment": "TODO",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.2.4",
				"level": "1",
				"description": "Ensure ip6tables firewall rules exist for all open ports (Automated)",
				"comment": "TODO, compare listeners against accept rules",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.4.4.2.5",
				"level": "1",
				"description": "Ensure ip6tables is enabled and active (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled ip6tables",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "systemctl is-enabled ip6tables",
								"result_type": "rc",
								"result": "!0"
							},
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now enable ip6tables",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "3.5",
				"level": "1",
				"description": "Ensure wireless interfaces are disabled (Automated)",
				"comment": "TODO",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "cat /bin/true",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "3.6",
				"level": "2",
				"description": "Disable IPv6 (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /sys/module/ipv6/parameters/disable | grep 0",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/3_6_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.1.1",
				"level": "2",
				"description": "Ensure auditd is installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q audit audit-libs",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "rpm -q audit audit-libs",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "dnf -y install audit audit-libs",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "4.1.1.2",
				"level": "2",
				"description": "Ensure auditd service is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled auditd",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "systemctl is-enabled auditd",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "systemctl --now enable auditd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "4.1.1.3",
				"level": "2",
				"description": " Ensure auditing for processes that start prior to auditd is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /boot/grub2/grubenv",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E 'kernelopts=(\\S+\\s+)*audit=1\\b' /boot/grub2/grubenv",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.1.4",
				"level": "2",
				"description": "Ensure audit_backlog_limit is sufficient (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /boot/grub2/grubenv",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/4_1_1_4_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.2.1",
				"level": "2",
				"description": "Ensure audit log storage size is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/audit/auditd.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep 'max_log_file = 8' /etc/audit/auditd.conf",
						"result": "0",
						"result_type": "rc",
						"comment": "Update size in MB for site policy."
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.2.2",
				"level": "2",
				"description": "Ensure audit logs are not automatically deleted (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/audit/auditd.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep 'max_log_file_action = keep_logs' /etc/audit/auditd.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.2.3",
				"level": "2",
				"description": "Ensure system is disabled when audit logs are full (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/audit/auditd.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep 'space_left_action = email' /etc/audit/auditd.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/audit/auditd.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep 'action_mail_acct = root' /etc/audit/auditd.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/audit/auditd.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep 'admin_space_left_action = halt' /etc/audit/auditd.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.3",
				"level": "2",
				"description": "Ensure changes to system administration scope (sudoers) is collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/sudoers -p wa -k scope' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/sudoers.d/ -p wa -k scope' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.4",
				"level": "2",
				"description": "Ensure login and logout events are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /var/log/lastlog -p wa -k logins' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /var/run/faillock/ -p wa -k logins' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.5",
				"level": "2",
				"description": "Ensure session initiation information is collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /var/run/utmp -p wa -k session' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /var/log/wtmp -p wa -k logins' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /var/log/btmp -p wa -k logins' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "auditctl -l | grep '-w /var/run/utmp -p wa -k session'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "auditctl -l | grep '-w /var/log/wtmp -p wa -k logins'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "auditctl -l | grep '-w /var/log/btmp -p wa -k logins'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.6",
				"level": "2",
				"description": "Ensure events that modify date and time information are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S clock_settime -k time-change'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S clock_settime -k time-change'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/localtime -p wa -k time-change'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.7",
				"level": "2",
				"description": "Ensure events that modify the system's Mandatory Access Controls are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/selinux/ -p wa -k MAC-policy' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /usr/share/selinux/ -p wa -k MAC-policy' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/selinux/ -p wa -k MAC-policy'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "auditctl -l | grep '-w /usr/share/selinux/ -p wa -k MAC-policy'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.8",
				"level": "2",
				"description": "Ensure events that modify the system's network environment are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/issue -p wa -k system-locale",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/issue.net -p wa -k system-locale'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/hosts -p wa -k system-locale'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/sysconfig/network -p wa -k system-locale'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/issue -p wa -k system-locale' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/issue.net -p wa -k system-locale' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/hosts -p wa -k system-locale' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/sysconfig/network -p wa -k system-locale' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.9",
				"level": "2",
				"description": "Ensure discretionary access control permission modification events are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=-1 -F key=perm_mod'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=-1 -F key=perm_mod'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.10",
				"level": "2",
				"description": "Ensure unsuccessful unauthorized file access attempts are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=-1 -k access'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=-1 -k access'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=-1 -k access'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=-1 -k access'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.11",
				"level": "2",
				"description": "Ensure events that modify user/group information are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/group -p wa -k identity'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/passwd -p wa -k identity'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/gshadow -p wa -k identity'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/shadow -p wa -k identity'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /etc/security/opasswd -p wa -k identity'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/group -p wa -k identity' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/passwd -p wa -k identity' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/gshadow -p wa -k identity' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/shadow -p wa -k identity' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /etc/security/opasswd -p wa -k identity' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.12",
				"level": "2",
				"description": "Ensure successful file system mounts are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=-1 -k mounts'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=-1 -k mounts'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.14",
				"level": "2",
				"description": "Ensure file deletion events by users are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=-1 -k delete'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=-1 -k delete'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.15",
				"level": "2",
				"description": "Ensure kernel module loading and unloading is collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /sbin/insmod -p x -k modules'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /sbin/rmmod -p x -k modules'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-w /sbin/modprobe -p x -k modules'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "uname -m",
								"result_type": "stdout",
								"result": "x86_64"
							}
						],
						"cmd": "auditctl -l | grep '-a always,exit -F arch=b64 -S init_module,delete_module -F key=modules'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /sbin/insmod -p x -k modules' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /sbin/rmmod -p x -k modules' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-w /sbin/modprobe -p x -k modules' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '-a always,exit -F arch=b64 -S init_module -S delete_module -k modules' /etc/audit/rules.d/*.rules",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.16",
				"level": "2",
				"description": "Ensure system administrator actions (sudolog) are collected (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/sudoers* 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							},
							{
								"cmd": "which auditctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/4_1_16_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.1.17",
				"level": "2",
				"description": "Ensure the audit configuration is immutable (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/audit/rules.d/*.rules 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep \"^\\s*[^#]\" /etc/audit/rules.d/*.rules | tail -1 | grep '-e 2'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.2.1.1",
				"level": "1",
				"description": "Ensure rsyslog is installed (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which rpm",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rpm -q rsyslog",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "which dnf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "dnf install rsyslog",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "4.2.1.2",
				"level": "1",
				"description": "Ensure rsyslog Service is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled rsyslog",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now enable rsyslog",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "4.2.1.3",
				"level": "1",
				"description": "Ensure rsyslog default file permissions configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/rsyslog.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep '^\\$FileCreateMode' /etc/rsyslog.conf | grep '0640'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/rsyslog.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '^\\$FileCreateMode' /etc/rsyslog.d/*.conf | grep '0640'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.2.1.5",
				"level": "1",
				"description": " Ensure rsyslog is configured to send logs to a remote log host (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/rsyslog.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep \"^*.*[^I][^I]*@\" /etc/rsyslog.conf'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/rsyslog.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": " grep \"^*.*[^I][^I]*@\" /etc/rsyslog.d/*.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.2.1.6",
				"level": "1",
				"description": "Ensure remote rsyslog messages are only accepted on designated log hosts. (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/rsyslog.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep '$ModLoad imtcp' /etc/rsyslog.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/rsyslog.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep '$InputTCPServerRun 514' /etc/rsyslog.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/rsyslog.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '$ModLoad imtcp' /etc/rsyslog.d/*.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "ls -q1 /etc/rsyslog.d/*.conf 2>/dev/null | wc -l",
								"result_type": "stdout",
								"result": "!0"
							}
						],
						"cmd": "grep '$InputTCPServerRun 514' /etc/rsyslog.d/*.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.2.2.1",
				"level": "1",
				"description": "Ensure journald is configured to send logs to rsyslog (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/systemd/journal.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -e '^\\s*ForwardToSyslog=yes' /etc/systemd/journald.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.2.2.2",
				"level": "1",
				"description": "Ensure journald is configured to compress large log files (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/systemd/journal.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -e '^\\s*Compress=yes' /etc/systemd/journald.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.2.2.3",
				"level": "1",
				"description": "Ensure journald is configured to write logfiles to persistent disk (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/systemd/journal.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -e '^\\s*Storage=persistent' /etc/systemd/journald.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "4.2.3",
				"level": "1",
				"description": "Ensure permissions on all logfiles are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /var/log",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "find /var/log/ -type f -perm /g+wx,o+rwx -exec ls -l \"{}\" + | grep .",
						"result": "!0",
						"result_type": "rc",
						"comment": "Use grep . trick returns nonzero when no files found"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.1.1",
				"level": "1",
				"description": "Ensure cron daemon is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl is-enabled crond",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "which systemctl",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "systemctl --now enable crond",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.1.2",
				"level": "1",
				"description": "Ensure permissions on /etc/crontab are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/crontab",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/crontab | grep 600",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/crontab",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/crontab | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/crontab",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/crontab && chmod og-rwx /etc/crontab",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.1.3",
				"level": "1",
				"description": "Ensure permissions on /etc/cron.hourly are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.hourly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/cron.hourly | grep 700",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.hourly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/cron.hourly | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/cron.hourly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/cron.hourly && chmod og-rwx /etc/cron.hourly",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.1.4",
				"level": "1",
				"description": "Ensure permissions on /etc/cron.daily are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.daily",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/cron.daily | grep 700",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.daily",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/cron.daily | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/cron.daily",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/cron.daily && chmod og-rwx /etc/cron.daily",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.1.5",
				"level": "1",
				"description": "Ensure permissions on /etc/cron.weekly are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.weekly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/cron.weekly | grep 700",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.weekly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/cron.weekly | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/cron.weekly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/cron.weekly && chmod og-rwx /etc/cron.weekly",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.1.6",
				"level": "1",
				"description": "Ensure permissions on /etc/cron.monthly are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.monthly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/cron.monthly | grep 700",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.monthly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/cron.monthly | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/cron.monthly",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/cron.monthly && chmod og-rwx /etc/cron.monthly",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.1.7",
				"level": "1",
				"description": "Ensure permissions on /etc/cron.d are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.d",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/cron.d | grep 700",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.d",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/cron.d | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/cron.d",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/cron.d && chmod og-rwx /etc/cron.d",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.1.8",
				"level": "1",
				"description": "Ensure at/cron is restricted to authorized users (Automated)",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "stat /etc/cron.deny",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
						],
						"cmd": "stat /etc/at.deny",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.allow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/cron.allow | grep 600",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.allow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/cron.allow | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/at.allow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/at.allow | grep 600",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/at.allow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/at.allow | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.deny",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rm -f /etc/cron.deny",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/at.deny",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "rm -f /etc/at.deny",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.allow",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "touch /etc/cron.allow",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/at.allow",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "touch /etc/at.allow",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/cron.allow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chmod og-rwx /etc/cron.allow && chown root:root /etc/cron.allow",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/at.allow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chmod og-rwx /etc/at.allow && chown root:root /etc/at.allow",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.1",
				"level": "1",
				"description": "Ensure permissions on /etc/ssh/sshd_config are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/ssh/sshd_config | grep 600",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/ssh/sshd_config | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "test -w /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "chown root:root /etc/ssh/sshd_config && chmod og-rwx /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.2",
				"level": "1",
				"description": "Ensure SSH access is limited (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -Pi '^\\h*(allow|deny)(users|groups)\\h+\\H+(\\h+.*)?$'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Pi '^\\h*(allow|deny)(users|groups)\\h+\\H+(\\h+.*)?$' /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.2.3",
				"level": "1",
				"description": "Ensure permissions on SSH private host key files are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
						],
						"cmd": "bash ./scripts/5_2_3_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "bash ./scripts/5_2_3_audit.sh",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod u-x,g-wx,o-rxw {} \\; && find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:ssh_keys {} \\;",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.4",
				"level": "1",
				"description": "Ensure permissions on SSH public host key files are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/ssh",
								"result_type": "rc",
								"result": "0"
							}		
						],
						"cmd": "bash ./scripts/5_2_4_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "bash ./scripts/5_2_4_audit.sh",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod u-x,go-wx {} \\; find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \\;",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.5",
				"level": "1",
				"description": "Ensure SSH LogLevel is appropriate (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": " sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep loglevel | grep -iE '(VERBOSE|INFO)'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -i 'loglevel' /etc/ssh/sshd_config | grep -Evi '(VERBOSE|INFO)'",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.2.6",
				"level": "2",
				"description": "Ensure SSH X11 forwarding is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i x11forwarding | grep 'x11forwarding no'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*x11forwarding\\s+yes' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.2.7",
				"level": "1",
				"description": "Ensure SSH MaxAuthTries is set to 4 or less (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep 'maxauthtries 4'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*maxauthtries\\s+([5-9]|[1-9][0-9]+)' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i maxauthtries /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/MaxAuthTries.*/MaxAuthTries 4/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i maxauthtries /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'MaxAuthTries 4' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.8",
				"level": "1",
				"description": "Ensure SSH IgnoreRhosts is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep ignorerhosts | grep 'yes'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*ignorerhosts\\s+no\b' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i ignorerhosts /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/IgnoreRhosts.*/IgnoreRhosts yes/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i ignorerhosts /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'IgnoreRhosts yes' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.9",
				"level": "1",
				"description": "Ensure SSH HostbasedAuthentication is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i 'hostbasedauthentication no'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*HostbasedAuthentication\\s+yes' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i hostbasedauthentication /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/HostbasedAuthentication.*/HostbasedAuthentication no/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i hostbasedauthentication /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'HostBasedAuthentication no' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.10",
				"level": "1",
				"description": "Ensure SSH root login is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i 'permitrootlogin no'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*PermitRootLogin\\s+yes' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i permitrootlogin /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/PermitRootLogin.*/PermitRootLogin no/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i permitrootlogin /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'PermitRootLogin no' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.11",
				"level": "1",
				"description": "5.2.11 Ensure SSH PermitEmptyPasswords is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i 'permitemptypasswords no'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*PermitEmptyPasswords\\s+yes' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i permitemptypasswords /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/PermitEmptyPasswords.*/PermitEmptyPasswords no/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i permitrootlogin /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'PermitEmptyPasswords no' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.12",
				"level": "1",
				"description": "Ensure SSH PermitUserEnvironment is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i 'permituserenvironment no'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*PermitUserEnvironment\\s+yes' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i permituserenvironment /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/PermitUserEnvironment.*/PermitUserEnvironment no/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i permituserenvironment /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'PermitUserEnvironment no' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.13",
				"level": "1",
				"description": "Ensure SSH Idle Timeout Interval is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep clientaliveinterval | grep -Ei 'ClientAliveInterval\\s+[1-9][0-9]{0,2}\\b",
						"result": "0",
						"result_type": "rc",
						"comment": "Match 1-999"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep clientalivecountmax | grep -Ei 'ClientAliveCountMax\\s+0\\b",
						"result": "0",
						"result_type": "rc",
						"comment": "Match 0"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*ClientAliveInterval\\s+(0|9[0-9][1-9]|[1-9][0-9][0-9][0-9]+|1[6-9]m|[2-9][0-9]m|[1-9][0-9][0-9]+m)\\b' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*ClientAliveCountMax\\s+([1-9]|[1-9][0-9]+)\b' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i clientaliveinterval /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/ClientAliveInterval.*/ClientAliveInterval 900/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i clientaliveinterval /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'ClientAliveInterval 900' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i clientalivecountmax /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/ClientAliveCountMax.*/ClientAliveCountMax 0/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i clientalivecountmax /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'ClientAliveCountMax 0' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.14",
				"level": "1",
				"description": "Ensure SSH LoginGraceTime is set to one minute or less (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep logingracetime |  grep -Ei '^\\s*LoginGraceTime\\s+([1-9]|[1-5][0-9]|60)\b'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*LoginGraceTime\\s+(0|6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+|[^1]m)' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i logingracetime /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/LoginGraceTime.*/LoginGraceTime 60/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i logingracetime /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'LoginGraceTime 60' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.15",
				"level": "1",
				"description": "Ensure SSH warning banner is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep banner | grep -iE 'banner\\s+/etc/issue.net\\b'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i banner /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/Banner.*/Banner \/etc\/issue.net/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i banner /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'Banner /etc/issue.net' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.16",
				"level": "1",
				"description": "Ensure SSH PAM is enabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i usepam | grep -i 'yes'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*UsePAM\\s+no' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i usePAM /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/UsePAM.*/UsePAM yes/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i UsePAM /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'UsePAM yes' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.17",
				"level": "1",
				"description": "Ensure SSH AllowTcpForwarding is disabled (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i allowtcpforwarding | grep 'no'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*AllowTcpForwarding\\s+yes' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i AllowTcpForwarding /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/AllowTcpForwarding.*/AllowTcpForwarding no/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i AllowTcpForwarding /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'AllowTcpForwarding no' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.18",
				"level": "1",
				"description": "Ensure SSH MaxStartups is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i maxstartups | grep -i '10:30:60'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*maxstartups\\s+(((1[1-9]|[1-9][0-9][0-9]+):([0-9]+):([0-9]+))|(([0-9]+):(3[1-9]|[4-9][0-9]|[1-9][0-9][0-9]+):([0-9]+))|(([0-9]+):([0-9]+):(6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+)))' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i maxstartups /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/MaxStartups.*/MaxStartups 10:30:60/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i MaxStartups /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'MaxStartups 10:30:60' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.19",
				"level": "1",
				"description": "Ensure SSH MaxSessions is set to 4 or less (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i maxsessions | grep -iE 'MaxSessions\\s+([1-9]|10)\\b",
						"result": "0",
						"result_type": "rc",
						"comment": "Control says 4 or less but audit says 10 or less so conflicting here."
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -Ei '^\\s*MaxSessions\\s+(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)' /etc/ssh/sshd_config",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "grep -i maxsessions /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "0",
								"comment": "entry exists already"
							}
						],
						"cmd": "sed -i \"s/MaxSessions.*/MaxSessions 10/\" /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "grep -i MaxSessions /etc/ssh/sshd_config",
								"result_type": "rc",
								"result": "!0",
								"comment": "entry does not exist yet."
							}
						],
						"cmd": "echo 'MaxSessions 10' >> /etc/ssh/sshd_config",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.2.20",
				"level": "1",
				"description": "Ensure system-wide crypto policy is not over-ridden (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/sysconfig/sshd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -i '^\\s*CRYPTO_POLICY=' /etc/sysconfig/sshd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/sysconfig/sshd",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "grep -i '^\\s*CRYPTO_POLICY=' /etc/sysconfig/sshd",
								"result_type": "rc",
								"result": "!0"
							}
						],
						"cmd": "sed -ri \"s/^\\s*(CRYPTO_POLICY\\s*=.*)$/# \\1/\" /etc/sysconfig/sshd && systemctl reload sshd",
						"result": "0",
						"result_type": "rc"
					}
				]
			},
			{
				"id": "5.3.1",
				"level": "1",
				"description": "Create custom authselect profile (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which authselect",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							}
						],
						"cmd": "authselect current | grep \"Profile ID: custom\"",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.3.2",
				"level": "1",
				"description": "Select authselect profile (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which authselect",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							}
						],
						"cmd": "authselect current | grep \"Profile ID:\"",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.3.3",
				"level": "1",
				"description": "Ensure authselect includes with-faillock (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which authselect",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							},
							{
								"cmd": "stat /etc/authselect/password-auth",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							}
						],
						"cmd": "grep pam_faillock.so /etc/authselect/password-auth",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "which authselect",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "cat /proc/1/sched  | head -n1 | grep systemd",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							},
							{
								"cmd": "stat /etc/authselect/password-auth",
								"result_type": "rc",
								"result": "0",
								"comment": "Are we in a container?"
							}
						],
						"cmd": "grep pam_faillock.so /etc/authselect/system-auth",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.4.1",
				"level": "1",
				"description": "Ensure password creation requirements are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/pam.d/system-auth",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep pam_pwquality.so /etc/pam.d/system-auth | grep 'retry=3'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/pam.d/password-auth",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep pam_pwquality.so /etc/pam.d/password-auth | grep 'retry=3'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/security/pwquality.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep ^minlen /etc/security/pwquality.conf",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/security/pwquality.conf",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -E \"^\\s*\\Scredit\\s*=\" /etc/security/pwquality.conf",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.4.2",
				"level": "1",
				"description": "Ensure lockout for failed password attempts is configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/pam.d/password-auth",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_4_2_audit.sh '/etc/pam.d/password-auth'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/pam.d/system-auth",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_4_2_audit.sh '/etc/pam.d/system-auth'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.4.3",
				"level": "1",
				"description": "Ensure password reuse is limited (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/pam.d/system-auth",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_4_3_audit.sh '/etc/pam.d/system-auth'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.4.4",
				"level": "1",
				"description": "Ensure password hashing algorithm is SHA-512 (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/pam.d/password-auth",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_4_4_audit.sh '/etc/pam.d/password-auth'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/pam.d/system-auth",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_4_4_audit.sh '/etc/pam.d/system-auth'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.1.1",
				"level": "1",
				"description": "Ensure password expiration is 365 days or less (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/login.defs",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_1_audit_1.sh",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_1_audit_2.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.1.2",
				"level": "1",
				"description": "Ensure minimum days between password changes is 7 or more (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/login.defs",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_2_audit_1.sh",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_2_audit_2.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.1.3",
				"level": "1",
				"description": "Ensure password expiration warning days is 7 or more (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/login.defs",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_3_audit_1.sh",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_3_audit_2.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.1.4",
				"level": "1",
				"description": "Ensure inactive password lock is 30 days or less (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which useradd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "useradd -D | grep 'INACTIVE=30'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_4_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.1.5",
				"level": "1",
				"description": "Ensure all users last password change date is in the past (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_1_5_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.2",
				"level": "1",
				"description": "Ensure system accounts are secured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_2_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.3",
				"level": "1",
				"description": "Ensure default user shell timeout is 900 seconds or less (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "cat /bin/true",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_3_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.4",
				"level": "1",
				"description": "Ensure default group for the root account is GID 0 (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep '^root:' /etc/passwd | cut -f4 -d:",
						"result": "0",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.5.5",
				"level": "1",
				"description": "Ensure default user umask is 027 or more restrictive (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/login.defs",
								"result_type": "rc",
								"result": "0"
							},
							{
								"cmd": "test -r /etc/pam.d/common-session",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/5_5_5_audit.sh",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/login.defs",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -RPi '(^|^[^#]*)\\s*umask\\s+([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b|[0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\\b)' /etc/login.defs /etc/profile* /etc/bashrc*",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.6",
				"level": "1",
				"description": "Ensure root login is restricted to system console (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/securetty",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "cat /etc/securetty",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "5.7",
				"level": "1",
				"description": "Ensure access to the su command is restricted (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/pam.d/su",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep pam_wheel.so /etc/pam.d/su | grep -E '^auth\\s+required\\s+pam_wheel.so\\s+use_uid'",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/group",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep wheel /etc/group",
						"result": "wheel:x:10:",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.1",
				"level": "2",
				"description": "Audit system file permissions (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "/bin/true",
								"result_type": "rc",
								"result": "1",
								"comment": "Skipping manual review of installed packages."
							}
						],
						"cmd": " rpm -Va --nomtime --nosize --nomd5 --nolinkto > /tmp/6_1_1_audit.txt",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.2",
				"level": "1",
				"description": "Ensure permissions on /etc/passwd are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/passwd | grep 644",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/passwd | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.3",
				"level": "1",
				"description": "Ensure permissions on /etc/passwd- are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/passwd-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/passwd- | grep 644",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/passwd-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/passwd- | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.4",
				"level": "1",
				"description": "Ensure permissions on /etc/shadow are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/shadow | grep 0",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/shadow | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.5",
				"level": "1",
				"description": "Ensure permissions on /etc/shadow- are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/shadow-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/shadow- | grep 0",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/shadow-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/shadow- | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.6",
				"level": "1",
				"description": "Ensure permissions on /etc/gshadow are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/gshadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/gshadow | grep 0",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/gshadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/gshadow | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.7",
				"level": "1",
				"description": "Ensure permissions on /etc/gshadow- are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/gshadow-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/gshadow- | grep 0",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/gshadow-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/gshadow- | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.8",
				"level": "1",
				"description": "Ensure permissions on /etc/group are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/group",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/group | grep 644",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/group",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/group | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.9",
				"level": "1",
				"description": "Ensure permissions on /etc/group- are configured (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/group-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%a' /etc/group- | grep 644",
						"result": "0",
						"result_type": "rc"
					},
					{
						"applicable_checks": [
							{
								"cmd": "stat /etc/group-",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "stat -c '%u:%g' /etc/group- | grep '0:0'",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.10",
				"level": "1",
				"description": "Ensure no world writable files exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "/bin/true",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -0002 2>/dev/null | wc -l",
						"result": "0",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.11",
				"level": "1",
				"description": "Ensure no unowned files or directories exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "/bin/true",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser 2>/dev/null | wc -l",
						"result": "0",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.12",
				"level": "1",
				"description": "Ensure no ungrouped files or directories exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "/bin/true",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -nogroup 2>/dev/null | wc -l",
						"result": "0",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.13",
				"level": "1",
				"description": "Audit SUID executables (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "/bin/true",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_1_13_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.1.14",
				"level": "1",
				"description": "Audit SGID executables (Manual)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "/bin/true",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_1_14_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.1",
				"level": "1",
				"description": "Ensure password fields are not empty (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "awk -F: '($2 == \"\" ) { print $1 \" does not have a password \"}' /etc/shadow",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.2",
				"level": "1",
				"description": "Ensure no legacy + entries exist in /etc/passwd (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -P '^\\+[^:\n\r]*:' /etc/passwd",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.3",
				"level": "1",
				"description": "Ensure root PATH Integrity (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "which sudo",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_3_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.4",
				"level": "1",
				"description": "Ensure no legacy + entries exist in /etc/shadow (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/shadow",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -P '^\\+[^:\\n\\r]*:' /etc/shadow",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.5",
				"level": "1",
				"description": "Ensure no legacy + entries exist in /etc/group (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/group",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "grep -P '^\\+[^:\\n\\r]*:' /etc/group",
						"result": "!0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.6",
				"level": "1",
				"description": "Ensure root is the only UID 0 account (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "awk -F: '($3 == 0) { print $1 }' /etc/passwd",
						"result": "root",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.7",
				"level": "1",
				"description": "Ensure users' home directories permissions are 750 or more restrictive (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_7_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.8",
				"level": "1",
				"description": "Ensure users own their home directories (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_8_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.9",
				"level": "1",
				"description": "Ensure users' dot files are not group or world writable (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_9_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.10",
				"level": "1",
				"description": "Ensure no users have .forward files (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_10_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.11",
				"level": "1",
				"description": "Ensure no users have .netrc files (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_11_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.12",
				"level": "1",
				"description": "Ensure users' .netrc Files are not group or world accessible (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_12_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.13",
				"level": "1",
				"description": "Ensure users' .netrc Files are not group or world accessible (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_13_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.14",
				"level": "1",
				"description": "Ensure all groups in /etc/passwd exist in /etc/group (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_14_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.15",
				"level": "1",
				"description": "Ensure no duplicate UIDs exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_14_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.15",
				"level": "1",
				"description": "Ensure no duplicate UIDs exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_15_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.16",
				"level": "1",
				"description": "Ensure no duplicate GIDs exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/group",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_16_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.17",
				"level": "1",
				"description": "Ensure no duplicate user names exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_17_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.18",
				"level": "1",
				"description": "Ensure no duplicate group names exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/group",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_18_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.19",
				"level": "1",
				"description": "Ensure shadow group is empty (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/group",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "awk -F: '($1==\"shadow\") {print $NF}' /etc/group",
						"result": "",
						"result_type": "stdout"
					},
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "awk -F: -v GID=\"$(awk -F: '($1==\"shadow\") {print $3}' /etc/group)\" '($4==GID) {print $1}' /etc/passwd",
						"result": "",
						"result_type": "stdout"
					}
				],
				"remediations": [
				]
			},
			{
				"id": "6.2.20",
				"level": "1",
				"description": "Ensure all users' home directories exist (Automated)",
				"audits": [
					{
						"applicable_checks": [
							{
								"cmd": "test -r /etc/passwd",
								"result_type": "rc",
								"result": "0"
							}
						],
						"cmd": "bash ./scripts/6_2_20_audit.sh",
						"result": "0",
						"result_type": "rc"
					}
				],
				"remediations": [
				]
			}
		]
	}
}


